{
  "name": "archiver",
  "version": "0.1.0",
  "description": "Creates Archives (ZIP) via Node Streams.",
  "homepage": "https://github.com/ctalkington/node-archiver",
  "author": {
    "name": "Chris Talkington",
    "url": "http://christalkington.com/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ctalkington/node-archiver.git"
  },
  "bugs": {
    "url": "https://github.com/ctalkington/node-archiver/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/ctalkington/node-archiver/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/archiver.js",
  "engines": {
    "node": ">= 0.6.3"
  },
  "scripts": {
    "test": "nodeunit --reporter=minimal test/tests.js"
  },
  "dependencies": {},
  "devDependencies": {
    "nodeunit": "~0.7.4"
  },
  "keywords": [
    "archive",
    "archiver",
    "zip"
  ],
  "readme": "# Archiver [![Build Status](https://secure.travis-ci.org/ctalkington/node-archiver.png?branch=master)](http://travis-ci.org/ctalkington/node-archiver)\r\n\r\nCreates Archives (ZIP) via Node Streams. Depends on Node's build-in zlib module for compression available since version 0.6.3.\r\n\r\n## Install\r\n\r\n```bash\r\nnpm install archiver\r\n```\r\n\r\n## API\r\n\r\n#### createZip(options)\r\n\r\nCreates an Archiver ZIP object. Options are passed to zlib.\r\n\r\n#### archive.addFile(inputStream, options, callback)\r\n\r\nAdds a file to the Archiver stream. At this moment, options must contain \"name\". If the \"store\" option is set to true, the file will be added uncompressed.\r\n\r\n#### archive.finalize(callback(written))\r\n\r\nFinalizes the Archiver stream. When everything is done, callback is called with the total number of bytes in the archive.\r\n\r\n## Example\r\n```javascript\r\nvar fs = require('fs');\r\n\r\nvar archiver = require('archiver');\r\n\r\nvar out = fs.createWriteStream('out.zip');\r\nvar zip = archiver.createZip({ level: 1 });\r\n\r\nzip.pipe(out);\r\n\r\nzip.addFile(fs.createReadStream('file1.js'), { name: 'file1.js' }, function() {\r\n  zip.addFile(fs.createReadStream('file2.js'), { name: 'file2.js' }, function() {\r\n    zip.finalize(function(written) { console.log(written + ' total bytes written'); });\r\n  });\r\n});\r\n```\r\n\r\n## Contributing\r\n\r\n#### Code Style Guide\r\n\r\n* code should be indented with 2 spaces\r\n* single quotes should be used where feasible\r\n* commas should be followed by a single space (function params, etc)\r\n* variable declaration should include `var`, [no multiple declarations](http://benalman.com/news/2012/05/multiple-var-statements-javascript/)\r\n\r\n#### Tests\r\n\r\n* tests should be added to the nodeunit config in `test/tests.js`\r\n* tests can be run with `npm test`\r\n* see existing tests for guidance\r\n\r\n## Credits\r\nOriginally inspired by Antoine van Wel's [node-zipstream](https://github.com/wellawaretech/node-zipstream).",
  "readmeFilename": "README.md",
  "_id": "archiver@0.1.0",
  "dist": {
    "shasum": "5153a1f08630c805802602372cc00856ddf0142d"
  },
  "_from": "archiver@~0.1.0"
}
