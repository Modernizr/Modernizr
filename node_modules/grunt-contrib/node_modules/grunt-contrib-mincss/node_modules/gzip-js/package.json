{
  "author": {
    "name": "T. Jameson Little",
    "email": "t.jameson.little@gmail.com"
  },
  "name": "gzip-js",
  "description": "GZIP in pure JavaScript (works in the browser)",
  "version": "0.3.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/beatgammit/gzip-js.git"
  },
  "main": "./lib/gzip.js",
  "bin": {
    "gzip-js": "./bin/gzip.js",
    "gunzip-js": "./bin/gunzip.js"
  },
  "scripts": {
    "test": "cd test; ./runner.py; cd -"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "dependencies": {
    "crc32": ">= 0.2.2",
    "deflate-js": ">= 0.2.2"
  },
  "devDependencies": {
    "optimist": "~0.2"
  },
  "readme": "Intro\n=====\n\n*gzip-js* is a pure JavaScript implementation of the GZIP file format. It uses the DEFLATE algorithm for compressing data.\n\nPlease note that since this is a pure JavaScript implementation, it should NOT be used on the server for production code. It also does not comply 100% with the standard, yet.\n\nThe main goal of this project is to bring GZIP compression to the browser.\n\nAPI\n===\n\nThere is only one function so far, zip:\n\nfunction zip(data[, options])\n \n* data- String of text or byte array to compress\n* options- object with options; options include:\n  * level- compression level (1-9); default 6\n  * timestamp- UNIX timestamp (seconds); if omitted, the current time will be used\n  * name- optional; original name of the file\n\nSample usage:\n\n    var gzip = require('gzip-js'),\n\t\toptions = {\n\t\t\tlevel: 3,\n\t\t\tname: 'hello-world.txt',\n\t\t\ttimestamp: parseInt(Date.now() / 1000, 10)\n\t\t};\n\n\t// out will be a JavaScript Array of bytes\n\tvar out = gzip.zip('Hello world', options);\n",
  "readmeFilename": "README.md",
  "_id": "gzip-js@0.3.1",
  "_from": "gzip-js@~0.3.1"
}
