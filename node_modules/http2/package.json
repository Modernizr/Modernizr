{
  "_args": [
    [
      "http2@git://github.com/gruntjs/node-http2.git#fix-return-value",
      "/home/travis/build/Modernizr/Modernizr/node_modules/grunt-contrib-connect"
    ]
  ],
  "_from": "git://github.com/gruntjs/node-http2.git#fix-return-value",
  "_id": "http2@3.3.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/http2",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/gruntjs/node-http2/fix-return-value/package.json",
      "gitUrl": "git://github.com/gruntjs/node-http2.git#fix-return-value",
      "httpsUrl": "git+https://github.com/gruntjs/node-http2.git#fix-return-value",
      "shortcut": "github:gruntjs/node-http2#fix-return-value",
      "ssh": "git@github.com:gruntjs/node-http2.git#fix-return-value",
      "sshUrl": "git+ssh://git@github.com/gruntjs/node-http2.git#fix-return-value",
      "type": "github"
    },
    "name": "http2",
    "raw": "http2@git://github.com/gruntjs/node-http2.git#fix-return-value",
    "rawSpec": "git://github.com/gruntjs/node-http2.git#fix-return-value",
    "scope": null,
    "spec": "git://github.com/gruntjs/node-http2.git#fix-return-value",
    "type": "hosted"
  },
  "_requiredBy": [
    "/grunt-contrib-connect"
  ],
  "_resolved": "git://github.com/gruntjs/node-http2.git#f1fc002c1aef9b4e871c808fc5ddacdeb1a5cd94",
  "_shasum": "c9793a0b5ddb3e4983803604113daab1723ef50a",
  "_shrinkwrap": null,
  "_spec": "http2@git://github.com/gruntjs/node-http2.git#fix-return-value",
  "_where": "/home/travis/build/Modernizr/Modernizr/node_modules/grunt-contrib-connect",
  "author": {
    "email": "gabor@molnar.es",
    "name": "Gábor Molnár",
    "url": "http://gabor.molnar.es"
  },
  "bugs": {
    "url": "https://github.com/molnarg/node-http2/issues"
  },
  "contributors": [
    {
      "name": "Nick Hurley"
    },
    {
      "name": "Mike Belshe"
    },
    {
      "name": "Yoshihiro Iwanaga"
    },
    {
      "name": "Igor Novikov"
    },
    {
      "name": "James Willcox"
    },
    {
      "name": "David Björklund"
    },
    {
      "name": "Patrick McManus"
    }
  ],
  "dependencies": {},
  "description": "An HTTP/2 client and server implementation",
  "devDependencies": {
    "bunyan": "*",
    "chai": "*",
    "docco": "*",
    "istanbul": "*",
    "mocha": "*"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "gitHead": "f1fc002c1aef9b4e871c808fc5ddacdeb1a5cd94",
  "homepage": "https://github.com/molnarg/node-http2",
  "keywords": [
    "http",
    "http2",
    "client",
    "server"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "http2",
  "optionalDependencies": {},
  "readme": "node-http2\n==========\n\nAn HTTP/2 ([RFC 7540](http://tools.ietf.org/html/rfc7540))\nclient and server implementation for node.js.\n\n![Travis CI status](https://travis-ci.org/molnarg/node-http2.svg?branch=master)\n\nInstallation\n------------\n\n```\nnpm install http2\n```\n\nAPI\n---\n\nThe API is very similar to the [standard node.js HTTPS API](http://nodejs.org/api/https.html). The\ngoal is the perfect API compatibility, with additional HTTP2 related extensions (like server push).\n\nDetailed API documentation is primarily maintained in the `lib/http.js` file and is [available in\nthe wiki](https://github.com/molnarg/node-http2/wiki/Public-API) as well.\n\nExamples\n--------\n\n### Using as a server ###\n\n```javascript\nvar options = {\n  key: fs.readFileSync('./example/localhost.key'),\n  cert: fs.readFileSync('./example/localhost.crt')\n};\n\nrequire('http2').createServer(options, function(request, response) {\n  response.end('Hello world!');\n}).listen(8080);\n```\n\n### Using as a client ###\n\n```javascript\nrequire('http2').get('https://localhost:8080/', function(response) {\n  response.pipe(process.stdout);\n});\n```\n\n### Simple static file server ###\n\nAn simple static file server serving up content from its own directory is available in the `example`\ndirectory. Running the server:\n\n```bash\n$ node ./example/server.js\n```\n\n### Simple command line client ###\n\nAn example client is also available. Downloading the server's own source code from the server:\n\n```bash\n$ node ./example/client.js 'https://localhost:8080/server.js' >/tmp/server.js\n```\n\n### Server push ###\n\nFor a server push example, see the source code of the example\n[server](https://github.com/molnarg/node-http2/blob/master/example/server.js) and\n[client](https://github.com/molnarg/node-http2/blob/master/example/client.js).\n\nStatus\n------\n\n* ALPN is only supported in node.js >= 5.0\n* Upgrade mechanism to start HTTP/2 over unencrypted channel is not implemented yet\n  (issue [#4](https://github.com/molnarg/node-http2/issues/4))\n* Other minor features found in\n  [this list](https://github.com/molnarg/node-http2/issues?labels=feature) are not implemented yet\n\nDevelopment\n-----------\n\n### Development dependencies ###\n\nThere's a few library you will need to have installed to do anything described in the following\nsections. After installing/cloning node-http2, run `npm install` in its directory to install\ndevelopment dependencies.\n\nUsed libraries:\n\n* [mocha](http://visionmedia.github.io/mocha/) for tests\n* [chai](http://chaijs.com/) for assertions\n* [istanbul](https://github.com/gotwarlost/istanbul) for code coverage analysis\n* [docco](http://jashkenas.github.io/docco/) for developer documentation\n* [bunyan](https://github.com/trentm/node-bunyan) for logging\n\nFor pretty printing logs, you will also need a global install of bunyan (`npm install -g bunyan`).\n\n### Developer documentation ###\n\nThe developer documentation is generated from the source code using docco and can be viewed online\n[here](http://molnarg.github.io/node-http2/doc/). If you'd like to have an offline copy, just run\n`npm run-script doc`.\n\n### Running the tests ###\n\nIt's easy, just run `npm test`. The tests are written in BDD style, so they are a good starting\npoint to understand the code.\n\n### Test coverage ###\n\nTo generate a code coverage report, run `npm test --coverage` (which runs very slowly, be patient).\nCode coverage summary as of version 3.0.1:\n```\nStatements   : 92.09% ( 1759/1910 )\nBranches     : 82.56% ( 696/843 )\nFunctions    : 91.38% ( 212/232 )\nLines        : 92.17% ( 1753/1902 )\n```\n\nThere's a hosted version of the detailed (line-by-line) coverage report\n[here](http://molnarg.github.io/node-http2/coverage/lcov-report/lib/).\n\n### Logging ###\n\nLogging is turned off by default. You can turn it on by passing a bunyan logger as `log` option when\ncreating a server or agent.\n\nWhen using the example server or client, it's very easy to turn logging on: set the `HTTP2_LOG`\nenvironment variable to `fatal`, `error`, `warn`, `info`, `debug` or `trace` (the logging level).\nTo log every single incoming and outgoing data chunk, use `HTTP2_LOG_DATA=1` besides\n`HTTP2_LOG=trace`. Log output goes to the standard error output. If the standard error is redirected\ninto a file, then the log output is in bunyan's JSON format for easier post-mortem analysis.\n\nRunning the example server and client with `info` level logging output:\n\n```bash\n$ HTTP2_LOG=info node ./example/server.js\n```\n\n```bash\n$ HTTP2_LOG=info node ./example/client.js 'https://localhost:8080/server.js' >/dev/null\n```\n\nContributors\n------------\n\nThe co-maintainer of the project is [Nick Hurley](https://github.com/todesschaf).\n\nCode contributions are always welcome! People who contributed to node-http2 so far:\n\n* [Nick Hurley](https://github.com/todesschaf)\n* [Mike Belshe](https://github.com/mbelshe)\n* [Yoshihiro Iwanaga](https://github.com/iwanaga)\n* [Igor Novikov](https://github.com/vsemogutor)\n* [James Willcox](https://github.com/snorp)\n* [David Björklund](https://github.com/kesla)\n* [Patrick McManus](https://github.com/mcmanus)\n\nSpecial thanks to Google for financing the development of this module as part of their [Summer of\nCode program](https://developers.google.com/open-source/soc/) (project: [HTTP/2 prototype server\nimplementation](https://google-melange.appspot.com/gsoc/project/details/google/gsoc2013/molnarg/5818821692620800)), and\nNick Hurley of Mozilla, my GSoC mentor, who helped with regular code review and technical advices.\n\nLicense\n-------\n\nThe MIT License\n\nCopyright (C) 2013 Gábor Molnár <gabor@molnar.es>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/molnarg/node-http2.git"
  },
  "scripts": {
    "doc": "docco lib/* --output doc --layout parallel --css doc/docco.css",
    "test": "istanbul test _mocha -- --reporter spec --slow 500 --timeout 15000"
  },
  "version": "3.3.2",
  "warnings": [
    {
      "code": "ENOTSUP",
      "pkgid": "http2@3.3.2",
      "required": {
        "node": ">=0.12.0"
      }
    }
  ]
}
