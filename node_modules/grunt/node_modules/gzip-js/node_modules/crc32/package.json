{
  "author": {
    "name": "T. Jameson Little",
    "email": "t.jameson.little@gmail.com"
  },
  "name": "crc32",
  "description": "CRC-32 implemented in JavaScript",
  "version": "0.2.2",
  "repository": {
    "type": "git",
    "url": "http://github.com/beatgammit/crc32.git"
  },
  "main": "./lib/crc32.js",
  "bin": {
    "crc32": "./bin/runner.js"
  },
  "scripts": {
    "test": "cd test ; ./runTests.sh"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "dependencies": {},
  "devDependencies": {},
  "readme": "Intro\n=====\n\nCRC means 'Cyclic Redundancy Check' and is a way to checksum data. It is a simple algorithm based on polynomials and is used in such projects as gzip.\n\nThis module only works with UTF-8 strings, and is meant to be able to work on node and in the browser.\n\nThis module also supports append mode (where a running crc sum is stored). Running in regular mode will reset the current crc sum.\n\nInstall\n=======\n\nTo use in node:\n\n`npm install crc32`\n\nTo use in the browser, use pakmanager.\n\nAPI\n===\n\n    var crc32 = require('crc32');\n\n\t// runs on some string using a table\n\tcrc32(someString);\n\n\t// runs on some string using direct mode\n\tcrc32(someString, true);\n\n\t// directly run on someString using a table\n\tcrc32.table(someString);\n\n\t// directly run on someString using a table in append mode\n\tcrc32.table(someString, true);\n\n\t// directly run on someString using direct mode\n\tcrc32.direct(someString);\n",
  "readmeFilename": "README.md",
  "_id": "crc32@0.2.2",
  "_from": "crc32@>= 0.2.2"
}
